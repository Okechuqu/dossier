import type { Metadata } from "next";
import "./globals.css";
import type { SanityImageSource } from "@sanity/image-url/lib/types/types";
import { client } from "./client";
import imageUrlBuilder from "@sanity/image-url";
import { type SanityDocument } from "next-sanity";

const PROFILE_QUERY = `*[_type == "profile"] | order(_createdAt desc) [0]`;
const options = { next: { revalidate: 30 } };

const { projectId, dataset } = client.config();
const urlFor = (source: SanityImageSource) =>
  projectId && dataset
    ? imageUrlBuilder({ projectId, dataset }).image(source)
    : null;

export async function generateMetadata(): Promise<Metadata> {
  const data = await client.fetch<SanityDocument>(PROFILE_QUERY, {}, options);

  if (!data) {
    return {
      title: "Okechuqu's Portfolio",
      description: "Generated by Okechuqu's portfolio",
      icons: null, // No favicon if data is unavailable
    };
  }

  const title = data.meta_title || "Okechuqu's Portfolio";
  const description =
    data.meta_description || "Generated by Okechuqu's portfolio";
  const faviconUrl = data.meta_favicon ? urlFor(data.favicon)?.url() : null;

  return {
    title,
    description,
    icons: faviconUrl ? { icon: [faviconUrl] } : undefined,
  };
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className="overflow-x-auto">{children}</body>
    </html>
  );
}
